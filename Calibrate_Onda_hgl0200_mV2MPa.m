function [pressure] = Calibrate_Onda_hgl0200_mV2MPa(time, voltage)
% mV2MPA_ONDA_HGL0200: Calculate the pressure signal based on the voltage signal.
% GOAL:
% INPUT: First argument is time, second argument is Signal
% OUTPUT:
%
% REFERENCE:
%
% NOTE: 



% Get the calibration curve
[calibration_frequency_MHz, MPa_per_V] = calibration_data();

%% Frequency dependent calibration, using the whole frequency spectrum (doesn't work right now because signals exist outside calibration spectrum)

% Get the FFT of the voltage signal.
time_adjusted = time-time(1); % start time from 0;
TimeTotal=range(time_adjusted); % Total time
SamplingFrequency = 1/mean(diff(time_adjusted)); % sampling frequency
N = round(TimeTotal*SamplingFrequency); %number of data points
N = round(N/2)*2; %force it to be even
TimeTotal = N/SamplingFrequency; %new total time domain length, if N changed
TimeFFT = (0:(N-1))/SamplingFrequency; % time vector (max(t) is 1 bin short of T)
FrequencySpectrum = (0:(N/2))/N*SamplingFrequency; %frequency vector (min(f)=0, the DC component. max(f) = fs/2 exactly)
% Match pressure to output variables
if length(TimeFFT)==length(voltage)
    y = voltage;%function(t); %hypothetical time domain vector, length(y)=N
else
    y = interp1(time_adjusted,voltage, TimeFFT);%function(t); %hypothetical time domain vector, length(y)=N
end
% lpad=2*length(time); % Do a bit of zero padding.
voltageFFT= bfft(y); % Get the fft

% Perform frequency dependent calibration on the signal.
FreqSensitivity = interp1(calibration_frequency_MHz*1e6, MPa_per_V, FrequencySpectrum); % Get the appropriate calibration values at each frequency bin, via linear interpolation
outsideF_index = isnan(FreqSensitivity);
FreqSensitivity(outsideF_index)=0; % Kill signals outside the frequency the hydrophone is calibrated at

SignalSensitized = voltageFFT(:).*FreqSensitivity(:); % Get the pressure signal in the Fourier domain
pressure =  bifft(SignalSensitized)*1e6; % inverse-DFT to get the pressure signal in the time domain convert MPa to Pa

% Determine what portion of the signal energy was kept when everything outside the calibration frequencies was cut. If <95% of signal is captured, warn.
voltageFFT_fbanded = voltageFFT;
voltageFFT_fbanded(outsideF_index)=0;

IntensitySpectrum = conj(voltageFFT).*voltageFFT;
IntensitySpectrum_fbanded = conj(voltageFFT_fbanded).*voltageFFT_fbanded;

% Calculate the percent of energy captured, ignoring 0 Hz and the Niquist frequency (the last frequency bin) 
EnergyCaptured = trapz(FrequencySpectrum(2:end-1),IntensitySpectrum_fbanded(2:end-1))/trapz(FrequencySpectrum(2:end-1),IntensitySpectrum(2:end-1));

if EnergyCaptured<0.95
    warning(sprintf('Only %3.1f%% of the signal energy was captured in the conversion. %3.1f%% of the voltage signal energy exists outside the hydrophone calibration frequency range [%3.1f - %3.1f] MHz. These frequency components were removed from the signal in the voltage-to-pressure conversion. See Calibrate_Onda_hgl0200_mV2MPa.m for details of this calculation.',EnergyCaptured*100,(1-EnergyCaptured)*100,min(calibration_frequency_MHz),max(calibration_frequency_MHz)));
end


% Frequency dependent calibration, using only at center frequency
% if false
%     [~,~,~,fc,~]=find_pulse_frequency(time, voltage); % Get the center frequency
%     fc_MHz = fc/1e6;
%     calibration_coeff_MPa_per_V = interp1(calibration_frequency_MHz, MPa_per_V, fc_MHz); % Get the hydrophone sensitivity (calibration coeff)
%     pressure_MPa = voltage*calibration_coeff_MPa_per_V; % Convert pressure to voltage
% end

end


function [] = signalFFT(SignalTime, Signal)
SignalTime_adjusted = SignalTime-SignalTime(1); % start time from 0;
SignalTimeTotal=range(SignalTime_adjusted); % Total time
SignalSamplingFrequency = 1/mean(diff(SignalTime_adjusted)); % sampling frequency
Signal_N = round(SignalTimeTotal*SignalSamplingFrequency); %number of data points
Signal_N = round(Signal_N/2)*2; %force it to be even
SignalTimeTotal = Signal_N/SignalSamplingFrequency; %new total time domain length, if N changed
SignalTimeFFT = (0:(Signal_N-1))/SignalSamplingFrequency; % time vector (max(t) is 1 bin short of T)
SignalFrequencySpectrum = (0:(Signal_N/2))/Signal_N*SignalSamplingFrequency; %frequency vector (min(f)=0, the DC component. max(f) = fs/2 exactly)
% Match pressure to output variables
if length(SignalTimeFFT)==length(Signal)
    ySignal = Signal;%function(t); %hypothetical time domain vector, length(y)=N
else
    ySignal = interp1(Signaltime_adjusted,Signal, SignalTimeFFT);%function(t); %hypothetical time domain vector, length(y)=N
end
SignalFFT= bfft(ySignal);
end


function [calibration_frequency_MHz, MPa_per_V] = calibration_data()
calibration_frequency_MHz = [1,1.05000000000000,1.10000000000000,1.15000000000000,1.20000000000000,1.25000000000000,1.30000000000000,1.35000000000000,1.40000000000000,1.45000000000000,1.50000000000000,1.55000000000000,1.60000000000000,1.65000000000000,1.70000000000000,1.75000000000000,1.80000000000000,1.85000000000000,1.90000000000000,1.95000000000000,2,2.05000000000000,2.10000000000000,2.15000000000000,2.20000000000000,2.25000000000000,2.30000000000000,2.35000000000000,2.40000000000000,2.45000000000000,2.50000000000000,2.55000000000000,2.60000000000000,2.65000000000000,2.70000000000000,2.75000000000000,2.80000000000000,2.85000000000000,2.90000000000000,2.95000000000000,3,3.05000000000000,3.10000000000000,3.15000000000000,3.20000000000000,3.25000000000000,3.30000000000000,3.35000000000000,3.40000000000000,3.45000000000000,3.50000000000000,3.55000000000000,3.60000000000000,3.65000000000000,3.70000000000000,3.75000000000000,3.80000000000000,3.85000000000000,3.90000000000000,3.95000000000000,4,4.05000000000000,4.10000000000000,4.15000000000000,4.20000000000000,4.25000000000000,4.30000000000000,4.35000000000000,4.40000000000000,4.45000000000000,4.50000000000000,4.55000000000000,4.60000000000000,4.65000000000000,4.70000000000000,4.75000000000000,4.80000000000000,4.85000000000000,4.90000000000000,4.95000000000000,5,5.05000000000000,5.10000000000000,5.15000000000000,5.20000000000000,5.25000000000000,5.30000000000000,5.35000000000000,5.40000000000000,5.45000000000000,5.50000000000000,5.55000000000000,5.60000000000000,5.65000000000000,5.70000000000000,5.75000000000000,5.80000000000000,5.85000000000000,5.90000000000000,5.95000000000000,6,6.05000000000000,6.10000000000000,6.15000000000000,6.20000000000000,6.25000000000000,6.30000000000000,6.35000000000000,6.40000000000000,6.45000000000000,6.50000000000000,6.55000000000000,6.60000000000000,6.65000000000000,6.70000000000000,6.75000000000000,6.80000000000000,6.85000000000000,6.90000000000000,6.95000000000000,7,7.05000000000000,7.10000000000000,7.15000000000000,7.20000000000000,7.25000000000000,7.30000000000000,7.35000000000000,7.40000000000000,7.45000000000000,7.50000000000000,7.55000000000000,7.60000000000000,7.65000000000000,7.70000000000000,7.75000000000000,7.80000000000000,7.85000000000000,7.90000000000000,7.95000000000000,8,8.05000000000000,8.10000000000000,8.15000000000000,8.20000000000000,8.25000000000000,8.30000000000000,8.35000000000000,8.40000000000000,8.45000000000000,8.50000000000000,8.55000000000000,8.60000000000000,8.65000000000000,8.70000000000000,8.75000000000000,8.80000000000000,8.85000000000000,8.90000000000000,8.95000000000000,9,9.05000000000000,9.10000000000000,9.15000000000000,9.20000000000000,9.25000000000000,9.30000000000000,9.35000000000000,9.40000000000000,9.45000000000000,9.50000000000000,9.55000000000000,9.60000000000000,9.65000000000000,9.70000000000000,9.75000000000000,9.80000000000000,9.85000000000000,9.90000000000000,9.95000000000000,10,10.0500000000000,10.1000000000000,10.1500000000000,10.2000000000000,10.2500000000000,10.3000000000000,10.3500000000000,10.4000000000000,10.4500000000000,10.5000000000000,10.5500000000000,10.6000000000000,10.6500000000000,10.7000000000000,10.7500000000000,10.8000000000000,10.8500000000000,10.9000000000000,10.9500000000000,11,11.0500000000000,11.1000000000000,11.1500000000000,11.2000000000000,11.2500000000000,11.3000000000000,11.3500000000000,11.4000000000000,11.4500000000000,11.5000000000000,11.5500000000000,11.6000000000000,11.6500000000000,11.7000000000000,11.7500000000000,11.8000000000000,11.8500000000000,11.9000000000000,11.9500000000000,12,12.0500000000000,12.1000000000000,12.1500000000000,12.2000000000000,12.2500000000000,12.3000000000000,12.3500000000000,12.4000000000000,12.4500000000000,12.5000000000000,12.5500000000000,12.6000000000000,12.6500000000000,12.7000000000000,12.7500000000000,12.8000000000000,12.8500000000000,12.9000000000000,12.9500000000000,13,13.0500000000000,13.1000000000000,13.1500000000000,13.2000000000000,13.2500000000000,13.3000000000000,13.3500000000000,13.4000000000000,13.4500000000000,13.5000000000000,13.5500000000000,13.6000000000000,13.6500000000000,13.7000000000000,13.7500000000000,13.8000000000000,13.8500000000000,13.9000000000000,13.9500000000000,14,14.0500000000000,14.1000000000000,14.1500000000000,14.2000000000000,14.2500000000000,14.3000000000000,14.3500000000000,14.4000000000000,14.4500000000000,14.5000000000000,14.5500000000000,14.6000000000000,14.6500000000000,14.7000000000000,14.7500000000000,14.8000000000000,14.8500000000000,14.9000000000000,14.9500000000000,15,15.0500000000000,15.1000000000000,15.1500000000000,15.2000000000000,15.2500000000000,15.3000000000000,15.3500000000000,15.4000000000000,15.4500000000000,15.5000000000000,15.5500000000000,15.6000000000000,15.6500000000000,15.7000000000000,15.7500000000000,15.8000000000000,15.8500000000000,15.9000000000000,15.9500000000000,16,16.0500000000000,16.1000000000000,16.1500000000000,16.2000000000000,16.2500000000000,16.3000000000000,16.3500000000000,16.4000000000000,16.4500000000000,16.5000000000000,16.5500000000000,16.6000000000000,16.6500000000000,16.7000000000000,16.7500000000000,16.8000000000000,16.8500000000000,16.9000000000000,16.9500000000000,17,17.0500000000000,17.1000000000000,17.1500000000000,17.2000000000000,17.2500000000000,17.3000000000000,17.3500000000000,17.4000000000000,17.4500000000000,17.5000000000000,17.5500000000000,17.6000000000000,17.6500000000000,17.7000000000000,17.7500000000000,17.8000000000000,17.8500000000000,17.9000000000000,17.9500000000000,18,18.0500000000000,18.1000000000000,18.1500000000000,18.2000000000000,18.2500000000000,18.3000000000000,18.3500000000000,18.4000000000000,18.4500000000000,18.5000000000000,18.5500000000000,18.6000000000000,18.6500000000000,18.7000000000000,18.7500000000000,18.8000000000000,18.8500000000000,18.9000000000000,18.9500000000000,19,19.0500000000000,19.1000000000000,19.1500000000000,19.2000000000000,19.2500000000000,19.3000000000000,19.3500000000000,19.4000000000000,19.4500000000000,19.5000000000000,19.5500000000000,19.6000000000000,19.6500000000000,19.7000000000000,19.7500000000000,19.8000000000000,19.8500000000000,19.9000000000000,19.9500000000000,20]';
mV_per_MPa = [24.9477112084430,24.4287233288164,23.8098744754910,23.1872239638819,22.7940418164628,22.4585506745071,22.3061920147704,22.9383457414520,23.6784297418373,23.6348716169327,23.4779165460964,23.3939939766014,23.4414153239828,24.0280163563598,23.9401257501208,23.2543361345456,22.8241518465621,22.3050680229156,22.0924836231740,21.9012842971577,21.5815291633101,21.1794291740586,20.5415620124413,19.8304203580312,19.7253670853731,20.1219074286834,20.3009272325308,20.3982026203676,20.4306351549303,20.4296554842084,20.4790385752617,20.6376012520798,21.2385385615128,20.9707182476184,20.6268203899811,21.0925806516469,21.6674058823529,21.7525603296057,21.3893784072260,20.8486922770026,20.8993437018951,20.8224581653197,20.8016842265166,20.7683489321186,20.5848664239664,20.8601673931529,21.3079404650324,21.9978419749727,22.2260979543667,21.6386689367158,21.1683771902134,21.1194417085574,20.9783333594648,20.7716513425489,20.5764249616314,20.6691143285314,20.8765840223715,20.9096461504032,21.1681268670675,21.5270724279054,21.7498394810307,21.9484021040039,22.2207651514945,22.6535555651559,22.9668666883431,22.8058128213074,22.7527528159599,22.8799943943069,23.0722122553871,23.3674734327371,23.4042365069805,23.0547727934581,22.6426813046898,22.3510189552700,22.4128349100933,22.3940557815261,22.2085602706361,22.0226371976574,21.8263403338507,21.7650677191621,21.9269987288195,21.9353628774227,22.1614688359797,22.3320225297616,22.3500994790773,22.0385626016113,21.5036805149396,21.0013983485816,20.6416924653549,20.6413119206290,20.7839292608895,20.7980158453478,20.8175935242786,20.8867260189892,21.0434861020774,21.3079803495313,21.3812638230154,21.4934255175221,21.5371804518099,21.5271160603269,21.6099449567436,21.6060458888428,21.6057320087818,21.6586377476965,21.4839435552601,21.3078696685997,21.3381145872763,21.4313328150076,21.4358824041674,21.4368582833676,21.4767293005094,21.4384114577232,21.4199525728931,21.5404145514262,21.2795907404699,21.1302172814248,21.0840038552852,21.0510800042184,21.0665531585930,21.3378207532045,21.6282889318488,21.7357186344822,21.7654796914123,21.7711385363802,21.7395829239163,21.6231501200200,21.5332481540773,21.3751335852374,21.2474150612411,21.1630100083370,21.0202076758199,21.0029906976051,21.0381636829689,21.2342671510274,21.3498880327321,21.3377652121100,21.4017052343914,21.4085894436072,21.3338631457132,21.3454870984690,21.2566837889650,21.2588154646686,21.2506836994160,21.0398061772788,20.9279235171395,20.7362815304848,20.5223160798150,20.4394527745287,20.3329821013221,20.2882102862815,20.1882019157919,20.1361490403576,20.2937511927149,20.3664491301456,20.4636237066510,20.5452211850589,20.4034303618776,20.2092448024497,20.1053699052508,20.1589102759454,20.2136847704175,20.2765354359343,20.4384352520736,20.5850760302038,20.5647748391951,20.5618213219136,20.5183147855737,20.5077573770197,20.5697481269474,20.5911323213203,20.7604920763096,21.0447472746358,21.2179172809514,21.3998662123323,21.5293042075129,21.6109289119533,21.6629798056347,21.6064005180072,21.3765889001920,21.1592113955946,20.8764429054954,20.6997996944385,20.5380253712168,20.3515611754849,20.2907663516979,20.1746854994521,20.1228105675138,20.1032882721015,19.9192262155025,19.7981426146894,19.5782134149318,19.2404694417378,18.9252916778136,18.5296554350510,18.2012878667712,17.8932478994264,17.7174032505885,17.8013243383043,17.8974503847805,18.0276262021984,18.1052401063854,18.1194107552991,18.2086014613247,18.2767267881690,18.3748126143358,18.6633557154494,18.7621997964344,18.6878775977304,18.7595689301540,19.0105730097928,19.0811870099883,19.1091490146262,19.2694011422321,19.3979334300907,19.4503624315581,19.3732129359266,19.5281907878280,19.5490721037637,19.5063282991982,19.6030332397375,19.7259623415325,19.9018488292083,19.9805242729723,20.1824549242934,20.3395724685767,20.2662321026513,20.5686212203734,20.5174432492637,20.5587402738150,20.6307580267645,20.6321386396702,20.9676308034847,20.8827835854362,20.5751270922308,21.0983417950688,20.8362153622377,20.8065582468914,20.9758573811163,21.1164354641289,20.9105770214852,20.9767285720607,20.9449027213150,20.8019616196927,20.8398253977256,20.7436751246037,20.6316688246761,20.6737838299855,20.5879895351438,20.4206432370709,20.2053267881150,20.3581341192994,20.1912352373078,20.1019415952256,19.9495084073358,20.0590237283085,20.0420313119328,20.1441580685810,19.8400299388933,20.0139152956607,19.9681390099117,19.8881098849170,19.9628386759867,19.7885974007326,19.6532449868600,19.4324966840714,19.3533330648473,19.3637076298107,19.2847013120671,19.3334853947446,19.3654440626086,19.3717456512496,19.3905806661098,19.3840528369881,19.3050554420964,19.3155961600356,19.2748887816868,19.3414853986358,19.4776443254054,19.5145048707951,19.4515250199772,19.5179272778876,19.4507706967026,19.5072752924907,19.6760794969131,19.7843193764293,19.8263331292833,19.8988765387642,19.9489656397942,20.1784254120943,20.2741416718685,20.2273103373060,20.5579887855604,20.6138695577323,20.5596212954441,20.4749870744149,20.8123295749256,21.2509254679237,21.2819664615012,21.1523108115497,21.1460075467439,21.4169768975660,21.5276361944581,21.4959789183024,21.6352263461015,22.0206338076201,22.0054238002215,21.7724395384541,21.8681970639761,21.8859910424303,22.0898092503497,21.8812867438343,21.6930728221049,21.6667218788656,21.6557348457570,21.6854084871706,21.5651880837253,21.3657319050981,21.3833624329124,21.2430376663227,21.0199520978313,20.8336021993470,20.8449760678738,20.6880441581816,20.5714112840612,20.5220256351314,20.4267484708891,20.1724173098046,20.1276338667223,19.9479995749468,19.4250211473958,19.5895755262733,19.5483538699983,19.2490448232180,19.3163709563089,19.3843037021798,19.2350164698569,19.0930570230167,19.1408955411778,18.9880717747585,18.8888953241303,19.0025869614963,19.0514905521918,19.0970141922601,18.9088033005569,18.7318414462695,18.6201056822219,18.7186132965401,18.9137419975492,18.8447988603728,18.5422000155473,18.5807747299285,18.6721951254989,18.4604365913037,18.4129935248370,18.5308124084191,18.6021736265220,18.6009633898414,18.6879326268316,19.0348912284350,18.8406000366270,18.4837639341690,18.3231689713435,17.8196526524775,18.1645105583280,18.8214464355594,18.7894664580282,18.5796574895354,18.3172926600182,18.2009250545389,18.3436649689540,18.5230265457553,18.9435136423243,18.9069947537369,18.8631963763980,18.8737082786200,18.9367823029131,18.8886256954691,18.8422274034177,18.8995681028942,18.8960873945501,18.9143503932742]';
MPa_per_V = 1./mV_per_MPa*1e3;
end

% end